<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lanou.mapper.SizeMapper" >
  <resultMap id="BaseResultMap" type="com.lanou.model.Size" >
    <id column="size_id" property="sizeId" jdbcType="INTEGER" />
    <result column="size_name" property="sizeName" jdbcType="VARCHAR" />
    <result column="goods_size_Id" property="goodsSizeId" jdbcType="INTEGER" />
    <result column="goods_number" property="goodsNumber" jdbcType="VARCHAR" />
    <result column="size_count" property="sizeCount" jdbcType="INTEGER" />
    <result column="size_status" property="sizeStatus" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="BaseOnly" type="java.util.HashMap" >
    <!--<id column="size_id" property="sizeId" jdbcType="INTEGER" />-->
    <result column="goods_number" property="goodsNumber" jdbcType="VARCHAR" />
    <result column="size_count" property="sizeCount" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    size_id, size_name, goods_size_Id, goods_number, size_count, size_status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ml_size
    where size_id = #{sizeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ml_size
    where size_id = #{sizeId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lanou.model.Size" >
    insert into ml_size (size_id, size_name, goods_size_Id, 
      goods_number, size_count, size_status
      )
    values (#{sizeId,jdbcType=INTEGER}, #{sizeName,jdbcType=VARCHAR}, #{goodsSizeId,jdbcType=INTEGER}, 
      #{goodsNumber,jdbcType=VARCHAR}, #{sizeCount,jdbcType=INTEGER}, #{sizeStatus,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lanou.model.Size" >
    insert into ml_size
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="sizeId != null" >
        size_id,
      </if>
      <if test="sizeName != null" >
        size_name,
      </if>
      <if test="goodsSizeId != null" >
        goods_size_Id,
      </if>
      <if test="goodsNumber != null" >
        goods_number,
      </if>
      <if test="sizeCount != null" >
        size_count,
      </if>
      <if test="sizeStatus != null" >
        size_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="sizeId != null" >
        #{sizeId,jdbcType=INTEGER},
      </if>
      <if test="sizeName != null" >
        #{sizeName,jdbcType=VARCHAR},
      </if>
      <if test="goodsSizeId != null" >
        #{goodsSizeId,jdbcType=INTEGER},
      </if>
      <if test="goodsNumber != null" >
        #{goodsNumber,jdbcType=VARCHAR},
      </if>
      <if test="sizeCount != null" >
        #{sizeCount,jdbcType=INTEGER},
      </if>
      <if test="sizeStatus != null" >
        #{sizeStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lanou.model.Size" >
    update ml_size
    <set >
      <if test="sizeName != null" >
        size_name = #{sizeName,jdbcType=VARCHAR},
      </if>
      <if test="goodsSizeId != null" >
        goods_size_Id = #{goodsSizeId,jdbcType=INTEGER},
      </if>
      <if test="goodsNumber != null" >
        goods_number = #{goodsNumber,jdbcType=VARCHAR},
      </if>
      <if test="sizeCount != null" >
        size_count = #{sizeCount,jdbcType=INTEGER},
      </if>
      <if test="sizeStatus != null" >
        size_status = #{sizeStatus,jdbcType=INTEGER},
      </if>
    </set>
    where size_id = #{sizeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lanou.model.Size" >
    update ml_size
    set size_name = #{sizeName,jdbcType=VARCHAR},
      goods_size_Id = #{goodsSizeId,jdbcType=INTEGER},
      goods_number = #{goodsNumber,jdbcType=VARCHAR},
      size_count = #{sizeCount,jdbcType=INTEGER},
      size_status = #{sizeStatus,jdbcType=INTEGER}
    where size_id = #{sizeId,jdbcType=INTEGER}
  </update>
  <select id="findCountAndNumByGoodsId" resultMap="BaseOnly" parameterType="Size">
    SELECT size_count,goods_number
    FROM ml_size
    WHERE goods_size_Id = #{goodsSizeId} AND size_name = #{sizeName}
  </select>
</mapper>